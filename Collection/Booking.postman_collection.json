{
	"info": {
		"_postman_id": "0fc8c260-40f9-4455-9bd4-57cbe9661642",
		"name": "Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37041522"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"id\", jsonData.bookingid);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//firstName\r",
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
							"// console.log(firstName);\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"//last name\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
							"// console.log(lastName)\r",
							"pm.environment.set(\"lastName\", lastName);\r",
							"\r",
							"//Price\r",
							"var price = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
							"pm.environment.set(\"totalPrice\", price);\r",
							"\r",
							"//Deposite ID\r",
							"\r",
							"var depositeID = pm.variables.replaceIn(\"{{$randomBoolean}}\");\r",
							"pm.environment.set(\"deposite_id\", depositeID);\r",
							"\r",
							"//Additional Needs\r",
							"\r",
							"var additionalNeed = pm.variables.replaceIn(\"{{$randomWord}}\");\r",
							"pm.environment.set(\"additionalNeed\", \"Bread \" + additionalNeed);\r",
							"\r",
							"\r",
							"//check_In_date\r",
							"const moment = require('moment');\r",
							"const today= moment();\r",
							"console.log(today.format(\"YYYY-MM-DD HH:mm:ss\"));\r",
							"pm.environment.set(\"date\",today.format(\"YYYY-MM-DD\"));\r",
							"\r",
							"//Checkout_Date\r",
							"const date1 = require('moment');\r",
							"const future = date1();\r",
							"var check_out = future.add(5, 'd').format(\"YYYY-MM-DD\");\r",
							"// console.log(future.add(5, 'd').add(2,'M').format(\"YYYY-MM-DD\"));\r",
							"pm.environment.set(\"future_date\", check_out);\r",
							"// console.log(future.subtract(5, 'd').format(\"YYYY-MM-DD\"))\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{deposite_id}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{date}}\",\r\n    \t\"checkout\" : \"{{future_date}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeed}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 Status code check\", function () {\r",
							"     pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// var jsonData = pm.response.json();\r",
							"// pm.test(\"firstName Validate\", function () {\r",
							"//      pm.expect(pm.response.json()).to.have.property('firstname').that.is.a('string').and.not.empty;\r",
							"// });\r",
							"\r",
							"\r",
							"// pm.test(\"LastName Validate\", function (){\r",
							"//      var responseBody = pm.response.json();\r",
							"//      pm.expect(responseBody).to.be.an('object');\r",
							"//      pm.expect(responseBody).to.have.property('lastname').that.is.a('string').and.not.empty;\r",
							"// });\r",
							"\r",
							"// first name\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Validate FirstName\", function () {\r",
							"    pm.expect(pm.environment.get(\"firstName\")).to.eql(jsonData.firstname);\r",
							"});\r",
							"//last name\r",
							"pm.test(\"LastName Validate\", function(){\r",
							"    pm.expect(pm.environment.get(\"lastName\")).to.eql(jsonData.lastname);\r",
							"});\r",
							"\r",
							"//total price \r",
							"pm.test(\"Verify Total Price\", function (){\r",
							"    var totalPrice = parseFloat(pm.environment.get(\"totalPrice\"));  // Convert string to number\r",
							"    pm.expect(totalPrice).to.eql(jsonData.totalprice);\r",
							"});\r",
							"\r",
							"//depositpaid\r",
							"pm.test(\"Verify depositpaid\", function () {\r",
							"    var depositPaid = pm.environment.get(\"deposite_id\") === 'true';  // Convert string to boolean\r",
							"    pm.expect(depositPaid).to.eql(jsonData.depositpaid);\r",
							"});\r",
							"\r",
							"// Date \r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Checkin Date Validate\", function () {\r",
							"    pm.expect(pm.environment.get(\"date\")).to.eql(jsonData.bookingdates.checkin);\r",
							"});\r",
							"\r",
							"pm.test(\"CheckOut Date\", function() {\r",
							"    pm.expect(pm.environment.get(\"future_date\")).to.eql(jsonData.bookingdates.checkout);\r",
							"});\r",
							"\r",
							"// check additionalneeds\r",
							"\r",
							"pm.test(\" Verify additionalneeds\", function() {\r",
							"    pm.expect(pm.environment.get(\"additionalNeed\")).to.eql(jsonData.additionalneeds);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"token\", data.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//firstName\r",
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
							"// console.log(firstName);\r",
							"pm.environment.set(\"firstName1\", firstName)\r",
							"\r",
							"//last name\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
							"// console.log(lastName)\r",
							"pm.environment.set(\"lastName1\", lastName);\r",
							"\r",
							"//Price\r",
							"var price = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
							"pm.environment.set(\"totalPrice1\", price);\r",
							"\r",
							"//Deposite ID\r",
							"\r",
							"var depositeID = pm.variables.replaceIn(\"{{$randomBoolean}}\");\r",
							"pm.environment.set(\"deposite_id1\", depositeID);\r",
							"\r",
							"//Additional Needs\r",
							"\r",
							"var additionalNeed = pm.variables.replaceIn(\"{{$randomWord}}\");\r",
							"pm.environment.set(\"additionalNeed1\", \"Bread \" + additionalNeed);\r",
							"\r",
							"\r",
							"//check_In_date\r",
							"const moment = require('moment');\r",
							"const today= moment();\r",
							"console.log(today.format(\"YYYY-MM-DD HH:mm:ss\"));\r",
							"pm.environment.set(\"date1\",today.format(\"YYYY-MM-DD\"));\r",
							"\r",
							"//Checkout_Date\r",
							"const date1 = require('moment');\r",
							"const future = date1();\r",
							"var check_out = future.add(6, 'y').format(\"YYYY-MM-DD\");\r",
							"pm.environment.set(\"future_date1\", check_out);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName1}}\",\r\n\t\"lastname\" : \"{{lastName1}}\",\r\n\t\"totalprice\" : {{totalPrice1}},\r\n\t\"depositpaid\" : {{deposite_id1}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{date1}}\",\r\n    \t\"checkout\" : \"{{future_date1}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeed1}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var status = pm.response.code\r",
							"console.log(status);\r",
							"\r",
							"if(status == 200){\r",
							"pm.test(\"200 Status code check\", function () {\r",
							"     pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// first name\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Validate FirstName\", function () {\r",
							"    pm.expect(pm.environment.get(\"firstName1\")).to.eql(jsonData.firstname);\r",
							"});\r",
							"//last name\r",
							"pm.test(\"LastName Validate\", function(){\r",
							"    pm.expect(pm.environment.get(\"lastName1\")).to.eql(jsonData.lastname);\r",
							"});\r",
							"\r",
							"//total price \r",
							"pm.test(\"Verify Total Price\", function (){\r",
							"    var totalPrice1 = parseFloat(pm.environment.get(\"totalPrice1\"));  \r",
							"    var expectedPrice = parseFloat(jsonData.totalprice.toString());  \r",
							"    pm.expect(totalPrice1).to.eql(expectedPrice);\r",
							"});\r",
							"\r",
							"\r",
							"//depositpaid\r",
							"pm.test(\"Verify depositpaid\", function () {\r",
							"    var depositPaid1 = pm.environment.get(\"deposite_id1\") === 'true';  // Convert string to boolean\r",
							"    pm.expect(depositPaid1).to.eql(jsonData.depositpaid);\r",
							"});\r",
							"\r",
							"// Date \r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Checkin Date Validate\", function () {\r",
							"    pm.expect(pm.environment.get(\"date1\")).to.eql(jsonData.bookingdates.checkin);\r",
							"});\r",
							"\r",
							"pm.test(\"CheckOut Date\", function() {\r",
							"    pm.expect(pm.environment.get(\"future_date1\")).to.eql(jsonData.bookingdates.checkout);\r",
							"});\r",
							"\r",
							"// check additionalneeds\r",
							"\r",
							"pm.test(\" Verify additionalneeds\", function() {\r",
							"    pm.expect(pm.environment.get(\"additionalNeed1\")).to.eql(jsonData.additionalneeds);\r",
							"});\r",
							"\r",
							"}else if(status == 404){\r",
							"    pm.test(\"Not Found\")\r",
							"}else if(status == 403){\r",
							"    pm.test(\"Permission Required\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}